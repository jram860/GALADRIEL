HEADER FILE 



#ifndef HistoManager_h
#define HistoManager_h

#include "globals.hh"
#include "G4AnalysisManager.hh"

#include "DetectorConstruction.hh"
class DetectorConstruction;

class HistoManager
{
private:
    void Book();
    G4String fFileName;
    DetectorConstruction* fDetector;
public:
    HistoManager(DetectorConstruction* det);
    ~HistoManager();
};



#endif


CONSTRUCTOR FILE

#include "HistoManager.hh"
#include "DetectorConstruction.hh"

#include "G4UnitsTable.hh"
#include "G4SystemOfUnits.hh"

HistoManager::HistoManager(DetectorConstruction* det):fFileName("FilterStack"),fDetector(det)
{
    Book();
}

HistoManager::~HistoManager()
{}

void HistoManager::Book()
{
    G4AnalysisManager* analysisManager = G4AnalysisManager::Instance();
    analysisManager->SetDefaultFileType("root");
    analysisManager->SetFileName(fFileName);
    analysisManager->SetVerboseLevel(1);
    analysisManager->SetActivation(true);    // enable inactivation of histograms

    G4String title;
    G4int NbOfModules = fDetector->GetNbOfModules();
    G4int kMaxHisto = NbOfModules + 3;

    analysisManager->CreateH1("EdepTot", "Total Edep in Stack",100,0,100);
    analysisManager->CreateH1("EdepProf", "Energy Deposition Profile",NbOfModules,0,100);
    
    for (G4int k=1;k<=NbOfModules;k++) {
        title = "Face On Spatial Edep profile in Detector" + k;
        analysisManager->CreateH2("HeatMapXY",title,200,-10*cm,10*cm,200,-10*cm,10*cm);
    }

    analysisManager->CreateH2("HeatMapYZ","Side-On Edep Spatial Distribution",200,-10*cm,10*cm,200,-10*cm,10*cm);
    analysisManager->SetActivation(true);
    G4int nbins = 100;
}   
