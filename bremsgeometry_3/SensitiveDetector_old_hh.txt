#ifndef SensitiveDetector_hh
#define SensitiveDetector_hh

#include "G4VSensitiveDetector.hh"
#include "G4THitsCollection.hh"
#include "G4VHit.hh"
#include "G4ThreeVector.hh"
#include "G4RunManager.hh"
#include "G4SystemOfUnits.hh"

class CalorHit : public G4VHit {
    public:
        G4int detectorID;
        G4double energyDeposited;

        CalorHit() : detectorID(-1), energyDeposited(0) {}
        virtual ~CalorHit() {};
};

typedef G4THitsCollection<CalorHit> CalorHitsCollection;

class SensitiveDetector : public G4VSensitiveDetector {
    public:
        SensitiveDetector(const G4String& name);
        virtual  ~SensitiveDetector();
        //methods inherited from the baes class
        virtual void Initialize(G4HCofThisEvent* hce) override;
        virtual G4bool ProcessHits(G4Step* step, G4TouchableHistory* history) override;
       // virtual void EndOfEvent(G4HCofThisEvent* hce) override;

    private:
        CalorHitsCollection* hitsCollection;
        G4int layerID;
};

#endif